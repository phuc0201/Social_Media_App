// Generated by view binder compiler. Do not edit!
package com.socialmediaapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.socialmediaapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MessageBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView cardChatMessageMe;

  @NonNull
  public final LinearLayout layoutChatContainerMe;

  @NonNull
  public final TextView textChatMessageMe;

  @NonNull
  public final TextView textChatTimestampMe;

  private MessageBinding(@NonNull ConstraintLayout rootView, @NonNull CardView cardChatMessageMe,
      @NonNull LinearLayout layoutChatContainerMe, @NonNull TextView textChatMessageMe,
      @NonNull TextView textChatTimestampMe) {
    this.rootView = rootView;
    this.cardChatMessageMe = cardChatMessageMe;
    this.layoutChatContainerMe = layoutChatContainerMe;
    this.textChatMessageMe = textChatMessageMe;
    this.textChatTimestampMe = textChatTimestampMe;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MessageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MessageBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.message, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MessageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.card_chat_message_me;
      CardView cardChatMessageMe = ViewBindings.findChildViewById(rootView, id);
      if (cardChatMessageMe == null) {
        break missingId;
      }

      id = R.id.layout_chat_container_me;
      LinearLayout layoutChatContainerMe = ViewBindings.findChildViewById(rootView, id);
      if (layoutChatContainerMe == null) {
        break missingId;
      }

      id = R.id.text_chat_message_me;
      TextView textChatMessageMe = ViewBindings.findChildViewById(rootView, id);
      if (textChatMessageMe == null) {
        break missingId;
      }

      id = R.id.text_chat_timestamp_me;
      TextView textChatTimestampMe = ViewBindings.findChildViewById(rootView, id);
      if (textChatTimestampMe == null) {
        break missingId;
      }

      return new MessageBinding((ConstraintLayout) rootView, cardChatMessageMe,
          layoutChatContainerMe, textChatMessageMe, textChatTimestampMe);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
