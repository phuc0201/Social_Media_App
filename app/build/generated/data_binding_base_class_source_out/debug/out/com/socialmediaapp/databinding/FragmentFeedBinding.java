// Generated by view binder compiler. Do not edit!
package com.socialmediaapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.socialmediaapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentFeedBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final AppBarBinding appBar;

  @NonNull
  public final FrameLayout fragmentContainerView;

  @NonNull
  public final RelativeLayout homePage;

  @NonNull
  public final RecyclerView listPost;

  private FragmentFeedBinding(@NonNull RelativeLayout rootView, @NonNull AppBarBinding appBar,
      @NonNull FrameLayout fragmentContainerView, @NonNull RelativeLayout homePage,
      @NonNull RecyclerView listPost) {
    this.rootView = rootView;
    this.appBar = appBar;
    this.fragmentContainerView = fragmentContainerView;
    this.homePage = homePage;
    this.listPost = listPost;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentFeedBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentFeedBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_feed, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentFeedBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBar;
      View appBar = ViewBindings.findChildViewById(rootView, id);
      if (appBar == null) {
        break missingId;
      }
      AppBarBinding binding_appBar = AppBarBinding.bind(appBar);

      id = R.id.fragment_container_view;
      FrameLayout fragmentContainerView = ViewBindings.findChildViewById(rootView, id);
      if (fragmentContainerView == null) {
        break missingId;
      }

      RelativeLayout homePage = (RelativeLayout) rootView;

      id = R.id.list_post;
      RecyclerView listPost = ViewBindings.findChildViewById(rootView, id);
      if (listPost == null) {
        break missingId;
      }

      return new FragmentFeedBinding((RelativeLayout) rootView, binding_appBar,
          fragmentContainerView, homePage, listPost);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
