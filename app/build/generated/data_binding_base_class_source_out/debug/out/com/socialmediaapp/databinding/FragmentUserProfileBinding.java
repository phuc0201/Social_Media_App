// Generated by view binder compiler. Do not edit!
package com.socialmediaapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.socialmediaapp.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentUserProfileBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final CircleImageView civUserAvatar;

  @NonNull
  public final LinearLayout followers;

  @NonNull
  public final LinearLayout l1;

  @NonNull
  public final LinearLayout llContact;

  @NonNull
  public final RecyclerView rcvListPost;

  @NonNull
  public final TextView tvNumFriends;

  @NonNull
  public final TextView tvNumPosts;

  @NonNull
  public final TextView tvUsername;

  private FragmentUserProfileBinding(@NonNull NestedScrollView rootView,
      @NonNull CircleImageView civUserAvatar, @NonNull LinearLayout followers,
      @NonNull LinearLayout l1, @NonNull LinearLayout llContact, @NonNull RecyclerView rcvListPost,
      @NonNull TextView tvNumFriends, @NonNull TextView tvNumPosts, @NonNull TextView tvUsername) {
    this.rootView = rootView;
    this.civUserAvatar = civUserAvatar;
    this.followers = followers;
    this.l1 = l1;
    this.llContact = llContact;
    this.rcvListPost = rcvListPost;
    this.tvNumFriends = tvNumFriends;
    this.tvNumPosts = tvNumPosts;
    this.tvUsername = tvUsername;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentUserProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentUserProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_user_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentUserProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.civ_user_avatar;
      CircleImageView civUserAvatar = ViewBindings.findChildViewById(rootView, id);
      if (civUserAvatar == null) {
        break missingId;
      }

      id = R.id.followers;
      LinearLayout followers = ViewBindings.findChildViewById(rootView, id);
      if (followers == null) {
        break missingId;
      }

      id = R.id.l1;
      LinearLayout l1 = ViewBindings.findChildViewById(rootView, id);
      if (l1 == null) {
        break missingId;
      }

      id = R.id.ll_contact;
      LinearLayout llContact = ViewBindings.findChildViewById(rootView, id);
      if (llContact == null) {
        break missingId;
      }

      id = R.id.rcv_list_post;
      RecyclerView rcvListPost = ViewBindings.findChildViewById(rootView, id);
      if (rcvListPost == null) {
        break missingId;
      }

      id = R.id.tv_numFriends;
      TextView tvNumFriends = ViewBindings.findChildViewById(rootView, id);
      if (tvNumFriends == null) {
        break missingId;
      }

      id = R.id.tv_numPosts;
      TextView tvNumPosts = ViewBindings.findChildViewById(rootView, id);
      if (tvNumPosts == null) {
        break missingId;
      }

      id = R.id.tv_username;
      TextView tvUsername = ViewBindings.findChildViewById(rootView, id);
      if (tvUsername == null) {
        break missingId;
      }

      return new FragmentUserProfileBinding((NestedScrollView) rootView, civUserAvatar, followers,
          l1, llContact, rcvListPost, tvNumFriends, tvNumPosts, tvUsername);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
