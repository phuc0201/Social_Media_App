// Generated by Dagger (https://dagger.dev).
package com.socialmediaapp.DI;

import android.content.Context;
import com.socialmediaapp.Repository.ContactRespository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideContactRepositoryFactory implements Factory<ContactRespository> {
  private final AppModule module;

  private final Provider<Context> contextProvider;

  public AppModule_ProvideContactRepositoryFactory(AppModule module,
      Provider<Context> contextProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
  }

  @Override
  public ContactRespository get() {
    return provideContactRepository(module, contextProvider.get());
  }

  public static AppModule_ProvideContactRepositoryFactory create(AppModule module,
      Provider<Context> contextProvider) {
    return new AppModule_ProvideContactRepositoryFactory(module, contextProvider);
  }

  public static ContactRespository provideContactRepository(AppModule instance, Context context) {
    return Preconditions.checkNotNullFromProvides(instance.provideContactRepository(context));
  }
}
